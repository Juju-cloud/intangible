raytracing for audio spatialization
create a way to push user data to a json file



Audio, spatialization, and speed
x, y, z = position (spatialization),
vx, vy, vz = velocity (speed),

NEED TO KNOW HOW TO: Return current node's position and velocity. 
Inside the force simulation. 

callbacks:
onNodeClick(fn) trigger audio playback, and connected nodes. 

onNodeHover(fn) 

onNodeRightClick(fn) => pull little UI menu to view info about audio file, allow to delete if user is the author. 

onBackgroundClick(fn) stop the audio. 

CHECK ALSO
getGraphBbox([nodeFilterFn])
"Returns the current bounding box of the nodes in the graph, formatted as { x: [<num>, <num>], y: [<num>, <num>], z: [<num>, <num>] }. If no nodes are found, returns null. Accepts an optional argument to define a custom node filter: node => <boolean>, which should return a truthy value if the node is to be included. This can be useful to calculate the bounding box of a portion of the graph."

graph2ScreenCoords(x, y, z)
"Utility method to translate node coordinates to the viewport domain. Given a set of x,y,z graph coordinates, returns the current equivalent {x, y} in viewport coordinates."

screen2GraphCoords(x, y, distance)	
"Utility method to translate viewport distance coordinates to the graph domain. Given a pair of x,y screen coordinates and distance from the camera, returns the current equivalent {x, y, z} in the domain of graph node coordinates."





https://github.com/vasturiano/d3-force-3d?tab=readme-ov-file#simulation
 // check documentation:
// const simulation = d3.forceSimulation(nodes)
// simulation.find(x[, y[, z]][, radius])


// check documentation for the following:
// const simulation = d3.forceSimulation(nodes)
// simulation.find(x[, y[, z]][, radius])